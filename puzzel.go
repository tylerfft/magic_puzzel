package main

import (
	"fmt"
	"strings"
)

// --------------------------------------------#
// --------------------------------------------#
//
// Need to modify the month day and weekday    #
// FYI : https://go.dev/tour/welcome/4         #
//
// --------------------------------------------#
// --------------------------------------------#
var month = "Mar" // "Jan" "feb" "Mar" "Apr" "May" "Jun" "Jul" "Aug" "Sep" "Oct" "Nov" "Dec"
var day = 11      //  1-31
var week = "Mon"  // "Mon" "Tue" "Wed" "Thu" "Fri" "Sat" "Sun"
// --------------------------------------------#
// --------------------------------------------#

var states []bool = nil
var shapes [][][]int = nil
var metadata [][]byte = nil
var foundCnt int = 0

func disable() {
	fmt.Printf("Month-%v, Day-%v, Week-%v\n", month, day, week)
	Month := months[strings.ToLower(month)]
	Day := days[day]
	Week := weeks[strings.ToLower(week)]
	xm, ym := Month%10, Month/10
	metadata[ym][xm] = 'X'
	xd, yd := Day%10, Day/10
	metadata[yd][xd] = 'X'
	xw, yw := Week%10, Week/10
	metadata[yw][xw] = 'X'
}

func main() {
	initdata()
	disable()
	printdesc()
	backTrace(0, 0)
}

func initdata() {
	metadata = make([][]byte, 5)
	for i := 0; i < 5; i++ {
		metadata[i] = make([]byte, 10)
		for j := 0; j < 10; j++ {
			metadata[i][j] = '0'
		}
	}
	shapes = [][][]int{Shape0, Shape1, Shape2, Shape3, Shape4, Shape5, Shape6, Shape7, Shape8}
	states = make([]bool, 9)
	for i := 0; i < 9; i++ {
		states[i] = false
	}
}

func isOK() bool {
	for i := 0; i < 5; i++ {
		for j := 0; j < 10; j++ {
			if metadata[i][j] == '0' {
				return false
			}
		}
	}
	return true
}

func able(idx int, shapetype int, shapeKind, xp, yp int) bool {
	x, y := idx%10, idx/10
	for _, v := range shapes[shapetype][shapeKind] {
		xx, yy := v%4, v/4
		xn := x + xx - xp
		yn := y + yy - yp
		if yn < 0 || yn >= 5 || xn < 0 || xn >= 10 || metadata[yn][xn] != '0' {
			return false
		}
	}
	return true
}

func fill(idx int, shapetype int, shapeKind, xp, yp int) {
	x, y := idx%10, idx/10
	for _, v := range shapes[shapetype][shapeKind] {
		xx, yy := v%4, v/4
		xn := x + xx - xp
		yn := y + yy - yp
		metadata[yn][xn] = (byte)(int('1') + shapetype)
	}
}

func withdraw(idx int, shapetype int, shapeKind, xp, yp int) {
	x, y := idx%10, idx/10
	for _, v := range shapes[shapetype][shapeKind] {
		xx, yy := v%4, v/4
		xn := x + xx - xp
		yn := y + yy - yp
		metadata[yn][xn] = '0'
	}
}

func printdesc() {
	fmt.Println("num-to-color")
	fmt.Println("1 - Pink")
	fmt.Println("2 - Blue")
	fmt.Println("3 - Brown")
	fmt.Println("4 - Cyan")
	fmt.Println("5 - Gray")
	fmt.Println("6 - Orange")
	fmt.Println("7 - Yellow")
	fmt.Println("8 - Red")
	fmt.Println("9 - Green")
	fmt.Println("X - Today")
}

func printdata() {
	fmt.Printf("*********  %v ********\n", foundCnt)
	foundCnt++

	for i := 0; i < 5; i++ {
		for j := 0; j < 10; j++ {
			fmt.Printf("|%c", metadata[i][j])
		}
		fmt.Println("|")
	}
	fmt.Println()
}

func backTrace(idx, cnt int) {
	if cnt == 9 {
		if isOK() {
			printdata()
		}
		return
	}
	x, y := idx%10, idx/10
	if metadata[y][x] == '0' {
		for i := 0; i < 9; i++ {
			if !states[i] {
				states[i] = true
				for j, v := range shapes[i] {
					for _, p := range v {
						xp, yp := p%4, p/4
						if able(idx, i, j, xp, yp) {
							fill(idx, i, j, xp, yp)
							backTrace(idx+1, cnt+1)
							withdraw(idx, i, j, xp, yp)
						}
					}
				}
				states[i] = false
			}
		}
	} else {
		backTrace(idx+1, cnt)
	}
}

var weeks = map[string]int{
	"mon": 8,
	"tue": 9,
	"wed": 19,
	"thu": 29,
	"fri": 39,
	"sat": 48,
	"sun": 49}

var months = map[string]int{
	"jan": 0,
	"feb": 1,
	"mar": 2,
	"apr": 10,
	"may": 11,
	"jun": 10,
	"jul": 21,
	"aug": 30,
	"sep": 31,
	"oct": 40,
	"nov": 41,
	"dec": 42}

var days = map[int]int{
	1:  3,
	2:  4,
	3:  5,
	4:  6,
	5:  7,
	6:  12,
	7:  13,
	8:  14,
	9:  15,
	10: 16,
	11: 17,
	12: 18,
	13: 22,
	14: 23,
	15: 24,
	16: 25,
	17: 26,
	18: 27,
	19: 28,
	20: 32,
	21: 33,
	22: 34,
	23: 35,
	24: 36,
	25: 37,
	26: 38,
	27: 43,
	28: 44,
	29: 45,
	30: 46,
	31: 47}

var Shape0 = [][]int{
	//0  |1|1|0|0|
	//4  |1|1|1|0|
	//8  |0|0|1|0|
	//12 |0|0|0|0|
	{0, 1, 4, 5, 6, 10},

	//0  |0|1|1|0|
	//4  |1|1|1|0|
	//8  |1|0|0|0|
	//12 |0|0|0|0|
	{1, 2, 4, 5, 6, 8},

	//0  |0|1|1|0|
	//4  |1|1|0|0|
	//8  |1|1|0|0|
	//12 |0|0|0|0|
	{1, 2, 4, 5, 8, 9},

	//0  |1|1|0|0|
	//4  |0|1|1|0|
	//8  |0|1|1|0|
	//12 |0|0|0|0|
	{0, 1, 5, 6, 9, 10},

	//0  |1|0|0|0|
	//4  |1|1|1|0|
	//8  |0|1|1|0|
	//12 |0|0|0|0|
	{0, 4, 5, 6, 9, 10},

	//0  |0|0|1|0|
	//4  |1|1|1|0|
	//8  |1|1|0|0|
	//12 |0|0|0|0|
	{2, 4, 5, 6, 8, 9},

	//0  |0|1|1|0|
	//4  |0|1|1|0|
	//8  |1|1|0|0|
	//12 |0|0|0|0|
	{1, 2, 5, 6, 8, 9},

	//0  |1|1|0|0|
	//4  |1|1|0|0|
	//8  |0|1|1|0|
	//12 |0|0|0|0|
	{0, 1, 4, 5, 9, 10}}

var Shape1 = [][]int{
	//0  |1|1|1|0|
	//4  |1|1|1|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 2, 4, 5, 6},

	//0  |1|1|0|0|
	//4  |1|1|0|0|
	//8  |1|1|0|0|
	//12 |0|0|0|0|
	{0, 1, 4, 5, 8, 9}}

var Shape2 = [][]int{
	//0 |1|0|1|0|
	//4 |1|1|1|0|
	//8 |0|0|0|0|
	//12|0|0|0|0|
	{0, 2, 4, 5, 6},

	//0 |1|1|0|0|
	//4 |1|0|0|0|
	//8 |1|1|0|0|
	//12|0|0|0|0|
	{0, 1, 4, 8, 9},

	//0 |1|1|1|0|
	//4 |1|0|1|0|
	//8 |0|0|0|0|
	//12|0|0|0|0|
	{0, 1, 2, 4, 6},

	//0 |1|1|0|0|
	//4 |0|1|0|0|
	//8 |1|1|0|0|
	//12|0|0|0|0|
	{0, 1, 5, 8, 9}}

var Shape3 = [][]int{
	//0 |1|1|1|0|
	//4 |1|0|0|0|
	//8 |1|0|0|0|
	//12|0|0|0|0|
	{0, 1, 2, 4, 8},

	//0  |1|0|0|0|
	//4  |1|0|0|0|
	//8  |1|1|1|0|
	//12 |0|0|0|0|
	{0, 4, 8, 9, 10},

	//0 |0|0|1|0|
	//4 |0|0|1|0|
	//8 |1|1|1|0|
	//12|0|0|0|0|
	{2, 6, 8, 9, 10},

	//0 |1|1|1|0|
	//4 |0|0|1|0|
	//8 |0|0|1|0|
	//12|0|0|0|0|
	{0, 1, 2, 6, 10}}

var Shape4 = [][]int{
	//0  |0|0|1|0|
	//4  |1|1|1|0|
	//8  |1|0|0|0|
	//12 |0|0|0|0|
	{2, 4, 5, 6, 8},

	//0  |1|1|0|0|
	//4  |0|1|0|0|
	//8  |0|1|1|0|
	//12 |0|0|0|0|
	{0, 1, 5, 9, 10},

	//0  |1|0|0|0|
	//4  |1|1|1|0|
	//8  |0|0|1|0|
	//12 |0|0|0|0|
	{0, 4, 5, 6, 10},

	//0  |0|1|1|0|
	//4  |0|1|0|0|
	//8  |1|1|0|0|
	//12 |0|0|0|0|
	{1, 2, 5, 8, 9}}

var Shape5 = [][]int{
	//0  |1|1|1|1|
	//4  |0|1|0|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 2, 3, 5},

	//0  |1|1|1|1|
	//4  |0|0|1|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 2, 3, 6},

	//0  |1|0|0|0|
	//4  |1|0|0|0|
	//8  |1|1|0|0|
	//12 |1|0|0|0|
	{0, 4, 8, 9, 12},

	//0  |0|1|0|0|
	//4  |0|1|0|0|
	//8  |1|1|0|0|
	//12 |0|1|0|0|
	{1, 5, 8, 9, 13},

	//0  |0|0|1|0|
	//4  |1|1|1|1|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{2, 4, 5, 6, 7},

	//0  |0|1|0|0|
	//4  |1|1|1|1|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{1, 4, 5, 6, 7},

	//0  |0|1|0|0|
	//4  |1|1|0|0|
	//8  |0|1|0|0|
	//12 |0|1|0|0|
	{1, 4, 5, 9, 13},

	//0  |1|0|0|0|
	//4  |1|1|0|0|
	//8  |1|0|0|0|
	//12 |1|0|0|0|
	{0, 4, 5, 8, 12}}

var Shape6 = [][]int{
	//0  |0|1|1|1|
	//4  |1|1|0|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{1, 2, 3, 4, 5},

	//0  |1|1|1|0|
	//4  |0|0|1|1|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 2, 6, 7},

	//0  |1|0|0|0|
	//4  |1|0|0|0|
	//8  |1|1|0|0|
	//12 |0|1|0|0|
	{0, 4, 8, 9, 13},

	//0  |0|1|0|0|
	//4  |0|1|0|0|
	//8  |1|1|0|0|
	//12 |1|0|0|0|
	{1, 5, 8, 9, 12},

	//0  |0|0|1|1|
	//4  |1|1|1|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{2, 3, 4, 5, 6},

	//0  |1|1|0|0|
	//4  |0|1|1|1|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 5, 6, 7},

	//0  |1|0|0|0|
	//4  |1|1|0|0|
	//8  |0|1|0|0|
	//12 |0|1|0|0|
	{0, 4, 5, 9, 13},

	//0  |0|1|0|0|
	//4  |1|1|0|0|
	//8  |1|0|0|0|
	//12 |1|0|0|0|
	{1, 4, 5, 8, 12}}

var Shape7 = [][]int{
	//0  |1|1|0|0|
	//4  |1|1|0|0|
	//8  |1|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 4, 5, 8},

	//0  |1|1|0|0|
	//4  |1|1|0|0|
	//8  |0|1|0|0|
	//12 |0|0|0|0|
	{0, 1, 4, 5, 9},

	//0  |1|1|0|0|
	//4  |1|1|1|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 4, 5, 6},

	//0  |0|1|1|0|
	//4  |1|1|1|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{1, 2, 4, 5, 6},

	//0  |0|1|0|0|
	//4  |1|1|0|0|
	//8  |1|1|0|0|
	//12 |0|0|0|0|
	{1, 4, 5, 8, 9},

	//0  |1|0|0|0|
	//4  |1|1|0|0|
	//8  |1|1|0|0|
	//12 |0|0|0|0|
	{0, 4, 5, 8, 9},

	//0  |1|1|1|0|
	//4  |0|1|1|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 2, 5, 6},

	//0  |1|1|1|0|
	//4  |1|1|0|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 2, 4, 5}}

var Shape8 = [][]int{
	//0  |0|0|0|1|
	//4  |1|1|1|1|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{3, 4, 5, 6, 7},
	//0  |1|0|0|0|
	//4  |1|1|1|1|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 4, 5, 6, 7},

	//0  |1|1|0|0|
	//4  |0|1|0|0|
	//8  |0|1|0|0|
	//12 |0|1|0|0|
	{0, 1, 5, 9, 13},

	//0  |1|1|0|0|
	//4  |1|0|0|0|
	//8  |1|0|0|0|
	//12 |1|0|0|0|
	{0, 1, 4, 8, 12},

	//0  |1|1|1|1|
	//4  |0|0|0|1|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 2, 3, 4},

	//0  |1|1|1|1|
	//4  |1|0|0|0|
	//8  |0|0|0|0|
	//12 |0|0|0|0|
	{0, 1, 2, 3, 7},

	//0  |0|1|0|0|
	//4  |0|1|0|0|
	//8  |0|1|0|0|
	//12 |1|1|0|0|
	{1, 5, 9, 12, 13},

	//0  |1|0|0|0|
	//4  |1|0|0|0|
	//8  |1|0|0|0|
	//12 |1|1|0|0|
	{0, 4, 8, 12, 13}}
